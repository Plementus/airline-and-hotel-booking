# Application Configuration
# This is the main configuration file for the application.
# ~~~~
include "development.conf" // Production Configuration
#include "production.conf" // Live Server


# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global = core.Bootstraps

# For Akka Concurrency
my-akka.actor.default-dispatcher.fork-join-executor.pool-size-max = 124
my-akka.actor.debug.receive = on
play.http.parser.maxMemoryBuffer = 2064K
trustxforwarded = true

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
play.logger.root = ERROR

# Logger used by the framework:
play.logger.play = INFO

# Logger provided to your application:
play.logger.application = DEBUG

time.zone = "Lagos/Africa"

file.upload_dir = "/"

# Authentication Driver
# Available drivers are "cache" and "session"
auth.driver = "session"
# This is mandatory regardless of the driver choosed.
# This provide the session name in the browser.
auth.driver.sessionName = "travelfix-session"

# File path for the session. This is only valid if "session" is selected as the driver.
auth.driver.session.filePath = ""

app.fb.appId = "760485737376061"
app.fb.secretid = "e8c137ab0b25043089efc1c9bbeba064"

# Protection agains CSRF scripting
play.http.filters = "core.security.Filters"

# Web Mailer
include "mail"

# Project Constants
include "project_detail"
# Amadeus GDS API
include "amadeus"
# Sabre GDS API
include "sabre"
# RoomBookPro API
include "roombookpro"

include "GTPay.conf"
include "GlobalPay.conf"

# Set the active GDS to use.
active.gds = "sabre"
# active.gds = "amadeus"

my.file.path = "/tmp/files/"
assets.version = "1"

amazon.aws.access_key_id = "AKIAJOSEFTG7AOIXRRNA"
amazon.aws.secret_access_key = "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"
amazon.aws.s3Url = "https://s3-us-west-2.amazonaws.com/tfxs3/"

play.modules {
  //  enabled += "play.filters.csrf.CSRFModule"
  //  enabled += "play.filters.cors.CORSModule"
  //  enabled += "play.filters.headers.SecurityHeadersModule"
  //  enabled += "play.filters.hosts.AllowedHostsModule"
  enabled += "play.filters.gzip.GzipFilterModule"
}

play.filters {
  # GZip filter configuration
  gzip {

    # The buffer size to use for gzipped bytes
    bufferSize = 8k

    # The maximum amount of content to buffer for gzipping in order to calculate the content length before falling back
    # to chunked encoding.
    chunkedThreshold = 100k

  }
}